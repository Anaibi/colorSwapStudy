
// $c would be base color *required*
// $c2 if passed in, second color for details/accents
// $c3 if passed in, third color for extended diversification ?
// level makes automatic calculation from complement/inverse colors even if no second and third colors are passed in

@function doColors($c, $c2:0, $c3:0, $level:0) {

  // minimum return-object
  $map: (
    b_25: lighten($c, 55%), 
    b_50: lighten($c, 39%), 
    b_100: lighten($c, 31.6%), 
    b_500: $c, 
    b_500_transparent: rgba($c, .2), 
    b_900: darken($c, 22%), 
    b_A400: lighten($c, 16%)
  );
  

  @if ($level > 1) {
    // if no color passed in, calculate complement version
    @if ($c2 == 0) {
      $c2: complement($c); 
      
      $blue: blue($c);
      $red: red($c);
      $green: green($c);

      $max: max($blue, $red, $green);
      $min: min($blue, $red, $green);
      
      // take out middle color
      @if ($max == $blue) {
        @if ($min == $red) {
          $c2: change-color($c2, $green: 0);
        } @else {
          $c2: change-color($c2, $red: 0);
        }
      } @else if ($max == $red) {
        @if ($min == $green) {
          $c2: change-color($c2, $blue: 0);
        } @else {
          $c2: change-color($c2, $green: 0);
        }
      } @else {
        @if ($min == $red) {
          $c2: change-color($c2, $blue: 0);
        } @else {
          $c2: change-color($c2, $red: 0);
        }
      }
    }

    $map2: (
      c_500: $c2, 
      c_900: darken($c2, 22%),
    );

    $map: map-merge($map, $map2);
  }

  @if ($level == 3) {
    // if no color passed in, calculate inverse
    $c3: invert($c); 

    $c3: change-color($c, $hue: 170deg, $saturation: 50%, $lightness: 40%);
  }

  $map3: (
      d_500: $c3,
      d_900: darken($c3, 20%),
      d_A400: change-color($c3, $hue: 160deg, $saturation: 85%, $lightness: 50%),
    );

    $map: map-merge($map, $map3);
  
  @return $map;
}



//$color_map: doColors($base_color);
$color_map: doColors($base_color, 0, 0, 3);

//$color_map: doColors($b, #E91E63, 0, 3);



@mixin colors {
  // -------------------------  COLOR FONTS 

  $font_color_light: map-get($color_map, b_50);

  $font_color_dark: map-get($color_map, b_900);


  // -----------------------  COLOR CLASSES 

  @each $class-name, $color in $color_map {
    .#{$class-name} {
      background-color: $color;

      // font colors depend of background color

      @if (str-index($class-name, 'b_500_transparent') == 1 or str-index($class-name, 'b_50') == 1 or str-index($class-name, 'b_100') == 1 or str-index($class-name, 'b_25') == 1) {
        color: $font-color_dark;
      }

      @else {
        color: $font-color_light;
      }

    }

  } 


  // ------------------  COLOR ASSIGNATIONS 

  // -------------------------  general 

  body {
    @extend .b_25;
  }

  // ---------------------------  links 
  a {
    color: map-get($color_map, b_500);

    &:hover {
      @extend .b_100;
    }
  }

  // ------------------------------  hr 
  hr {
    @extend hr;
    @extend .b_50;
  }

  // ----------------------------  code 
  code {
    @extend .b_900;
  }

  // -----------------------------  pre 
  pre {
    @extend .b_900;
  }

  // -------------------------- .stripe 
  .stripe {
    @extend .b_500_transparent;

    @media screen and (max-width: 500px) {
      background-color: map-get($color_map, b_500);
      color: $font_color_light;
    }
  }

  // --------------------------- .boxed 
  .boxed {
    @extend .b_500;
  }

  // ----------------------- .highlight 
  .highlight {
    @extend .b_500;
  }

  // ------------------------- .sidebar 
  .sidebar {
    @extend .b_50;
  }

}









